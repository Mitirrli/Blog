[{"categories":["gitlab"],"content":"Gitlab版本升级 公司目前gitlab版本是9.5.5,因升级服务器顺道把gitlab也升到最新,这里记录下历程。\n备份Gitlab 1  $ gitlab-rake gitlab:backup:create   执行命令进行备份，将会生成一个命名格式为_gitlab_backup.tar的压缩包\nGitlab升级 升级历程: 9.5.5 -\u003e 9.5.9 -\u003e 9.5.10 -\u003e 10.8.7 -\u003e 11.11.8 -\u003e 12.0.12 -\u003e 12.10.14 -\u003e 13.0.12 -\u003e 13.2.3 按照官网升级顺序依次升级\n下载deb包(*为版本号) 1  $ wget https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/ubuntu/pool/xenial/main/g/gitlab-ce/gitlab-ce_*-ce.0_amd64.deb   安装deb包 1  $ dpkg -i *.deb   查看版本 1  $ cat /opt/gitlab/embedded/service/gitlab-rails/VERSION   Gitlab恢复 首先关闭服务\n1  $ gitlab-rake gitlab:backup:restore BACKUP 1597233443_2020_08_12_9.3.1   Gitlab 502解决(查看pid) 1  $ gitlab-ctl status   ","description":"","tags":["gitlab"],"title":"Update Gitlab","uri":"/blog/gitlab/update/"},{"categories":["php"],"content":"有用的php命令行命令 1. 查看当前已安装的扩展 1  $ php -m   2. 查看当前php版本 1  $ php -v   3. 查看扩展版本 1  $ php --ri 扩展名   4. 快速查看扩展版本 1  $ php -i | less   5. 查看php配置文件路径 1  $ php -i | grep php.ini   6. 执行文件(检查代码语法是否正确) 1  $ php -f 文件名   7. 直接执行代码 1  $ php -r 'echo 1;'   8. 检查代码语法 1  $ php -l 文件名   9. 查看帮助 1  $ php -h   10. 查看当前php可执行文件位置 1  $ which php   11. 开启服务 1  $ php -S 0.0.0.0:1234   12. 读取特定的ini文件 1  $ php -c /usr/local/etc/php/php.ini   ","description":"","tags":["script","php"],"title":"Php Command Script","uri":"/blog/php/script/"}]
